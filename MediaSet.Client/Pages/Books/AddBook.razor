@page "/books/add"
@inject HttpClient Http
@inject IUriHelper UriHelper

<h3>Add Book</h3>
<NavLink class="nav-link" href="books">
    <span class="oi oi-book" aria-hidden="true"></span> Books
</NavLink>
<EditForm Model="@bookViewModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        <label for="title">Title:</label>
        <InputText id="title" @bind-Value="@bookViewModel.Title" />
    </p>

    <p>
        <label for="isb">ISBN:</label>
        <InputText id="isbn" @bind-Value="@bookViewModel.ISBN" />
    </p>

    <p>
        <label for="subTitle">Sub Title:</label>
        <InputText id="subTitle" @bind-Value="@bookViewModel.SubTitle" />
    </p>

    <p>
        <label for="numberOfPages">Number of Pages:</label>
        <InputNumber id="numberOfPages" @bind-Value="@bookViewModel.NumberOfPages" />
    </p>

    @if (!Saving)
    {
        <button class="btn btn-primary" type="submit">Submit</button>
    }
    else
    {
        <button class="btn btn-primary" type="button" disabled><Loading Message="Saving..." InButton="true" />Saving...</button>
    }
</EditForm>

@code {
    private AddBookViewModel bookViewModel = new AddBookViewModel();
    private bool Saving = false;

    protected async void HandleValidSubmit()
    {
        Saving = true;
        await Http.SendJsonAsync(HttpMethod.Post, "api/book/add", bookViewModel);
        UriHelper.NavigateTo("/books");
    }
}
