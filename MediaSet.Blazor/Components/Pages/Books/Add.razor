@page "/books/add"
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@inject IConfiguration Config
@inject HttpClient HttpClient
@inject NavigationManager Navigation

<div class="flex flex-col gap-2">
  <div class="flex flex-col gap-2 items-normal sm:flex-row sm:gap-0 sm:items-center justify-between">
    <MediaHeader>Add Book</MediaHeader>
  </div>
  <div class="mt-4 flex flex-col gap-2">
    <EditForm Model="Book" OnValidSubmit="Submit" FormName="Add-Book">
      <div class="flex flex-col gap-2">
        <DataAnnotationsValidator />
        <BookForm Book="@Book" />
      </div>
      <Button class="mt-4">Add</Button>
    </EditForm>
  </div>
</div>

@code {
  [SupplyParameterFromForm]
  private Book Book { get; set; } = new();

  private string apiEndpoint = string.Empty;

  protected override void OnInitialized()
  {
    apiEndpoint = $"{Config.GetValue<string>("MediaSetApi")}";
  }

  private async Task Submit()
  {
    var requestUri = $"{apiEndpoint}/books";
    var result = await HttpClient.PostAsJsonAsync<Book>(requestUri, Book);
    if (result.IsSuccessStatusCode) {
      var newBook = await result.Content.ReadFromJsonAsync<Book>();
      if (newBook is not null)
      {
        Navigation.NavigateTo($"/books/{newBook.Id}");
      }
      else
      {
        Console.WriteLine("Failed to get the new book from the response for some reason");
      }
    }
  }
}
