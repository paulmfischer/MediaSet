@using System.Globalization
<button @attributes=InputAttributes class=@elemClass>@ChildContent</button>

@code {
  [Parameter]
  public ButtonStyle ButtonStyle { get; set; }

  [Parameter]
  public RenderFragment? ChildContent { get; set; }

  [Parameter(CaptureUnmatchedValues = true)]
  public IDictionary<string, object>? InputAttributes { get; set; }

  private const string defaultClass = "px-4 py-2 dark:text-slate-400 dark:bg-blue-900 dark:hover:bg-blue-800 rounded bg-white transition-colors";
  private const string linkClass = "text-blue-700 border-none underline p-0";
  private string? elemClass;

  protected override void OnInitialized()
  {
    elemClass = ButtonStyle switch
    {
      ButtonStyle.Link => linkClass,
      ButtonStyle.Default => defaultClass,
      _ => defaultClass
    };
    if (InputAttributes?.TryGetValue("class", out var cl) == true)
    {
      elemClass += string.Format(" {0}", Convert.ToString(cl, CultureInfo.InvariantCulture));
      InputAttributes.Remove("class");
    }
  }
}
